cmake_minimum_required(VERSION 3.25 FATAL_ERROR)

SET(PROJECTNAME Quant)

PROJECT(${PROJECTNAME})

FIND_LIBRARY(MYSQL_CPPCONN_LIBRARY
    NAMES mysqlcppconn
    PATHS ${CMAKE_SOURCE_DIR}/third-party/lib64/
)

FIND_LIBRARY(MYSQL_CPPCONN_STATIC_LIBRARY
    NAMES mysqlcppconn-static
    PATHS ${CMAKE_SOURCE_DIR}/third-party/lib64/
)

MESSAGE(STATUS "MySQL Connector/C++ found at: ${MYSQL_CPPCONN_LIBRARY}")
MESSAGE(STATUS "MySQL Connector/C++ Static found at: ${MYSQL_CPPCONN_STATIC_LIBRARY}")

FILE(GLOB_RECURSE PROJECT_SOURCES ${CMAKE_SOURCE_DIR}/src/*.cpp)
FILE(GLOB_RECURSE PROJECT_HEADERS ${CMAKE_SOURCE_DIR}/include/*.hpp)
FILE(GLOB_RECURSE THIRD_PARTY_SOURCES ${CMAKE_SOURCE_DIR}/third-party/lib/*.cpp)
FILE(GLOB_RECURSE THIRD_PARTY_C_HEADERS ${CMAKE_SOURCE_DIR}/third-party/include/*.h)
FILE(GLOB_RECURSE THIRD_PARTY_CXX_HEADERS ${CMAKE_SOURCE_DIR}/third-party/include/*.hpp)

INCLUDE_DIRECTORIES(
    ${CMAKE_SOURCE_DIR}/include/
    ${CMAKE_SOURCE_DIR}/third-party/include/
    ${CMAKE_SOURCE_DIR}/third-party/include/jdbc
    ${CMAKE_SOURCE_DIR}/third-party/include/cppconn
)

LINK_DIRECTORIES(
    ${CMAKE_SOURCE_DIR}/lib/
    ${CMAKE_SOURCE_DIR}/lib64/
)

ADD_EXECUTABLE(${PROJECTNAME}
        ${PROJECT_SOURCES}
        ${PROJECT_HEADERS}
        ${THIRD_PARTY_C_HEADERS}
        ${THIRD_PARTY_CXX_HEADERS}
        ${THIRD_PARTY_SOURCES}
)

# Link against the found libraries
IF(MYSQL_CPPCONN_LIBRARY)
    TARGET_LINK_LIBRARIES(${PROJECTNAME} ${MYSQL_CPPCONN_LIBRARY})
ELSE()
    MESSAGE(WARNING "MySQL Connector/C++ library not found. Using dynamic linking with -lmysqlcppconn.")
    TARGET_LINK_LIBRARIES(${PROJECTNAME} mysqlcppconn)
ENDIF()


SET(CMAKE_CXX_STANDARD 23)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

TARGET_COMPILE_OPTIONS(${PROJECTNAME} PUBLIC -std=c++23 -Wall -g)